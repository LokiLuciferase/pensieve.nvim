*pensieve.txt*  An encrypted diary for Neovim
==============================================================================
CONTENTS                                          *pensieve-contents*

    1. Introduction ......................... |pensieve-introduction|
    2. Setup ................................ |pensieve-setup|
    3. Commands ............................. |pensieve-commands|
    4. API .................................. |pensieve-api|

==============================================================================
1. INTRODUCTION                               *pensieve-introduction*


Pensieve implements a markdown-based diary using Neovim. Strong file-based
encryption for diary entries and any attached files is optionally supported
through https://www.github.com/rfjakob/gocryptfs.

==============================================================================
2. SETUP                                             *pensieve-setup*


Make sure to add to call the setup function with the proper configuration in
your `init` file.

If you use `init.vim`: >

    lua require('pensieve').setup {default_encryption = 'gocryptfs'}

Or, if you use `init.lua`: >

    require('pensieve').setup {default_encryption = 'gocryptfs'}

==============================================================================
3. COMMANDS                                           *pensieve-commands*


:PensieveInit <repo>                                   *PensieveInit*

Initializes a new Pensieve diary repo at the path <repo>. Fails if the path
points to a non-empty directory.

:PensieveOpen <repo> 				       *PensieveOpen*

Opens the diary repo at path <repo>. Unless any files are edited in the repo,
it will automatically close after `options.encryption_timeout`. The repo will
also close upon closing of Neovim.

:PensieveClose 					       *PensieveClose*

Explicitly closes the currently open repo.

:PensieveEdit [datestring] 			       *PensieveEdit*

Opens a diary page from the currently open repo for editing - per default,
today's entry. By passing either a date string like `2023-04-20` or a day
offset like `t-3`, entries of other days can be edited. In case the entry 
for the given day does not yet exist, it is created from a markdown template.

:PensieveAttach <glob> [datestring] 		       *PensieveAttach*

Copies files and directories matching <glob> to a subdirectory `attachments/`
of the diary entry for the given date (per default, today).

:Pensieve <repo> [datestring] 				*Pensieve*
Convenience method to open a repo and immediately edit a diary page.

==============================================================================
4. API                                                 *pensieve-api*


pensieve.setup({config})                  *pensieve.setup()*
        Configures this plugin. Currently supported configuration variables
        are:
        • `default_encryption`: the encryption tool backing the diary repo. 
	Currently, `gocryptfs` and `plaintext` are supported, the latter
	disabling encryption entirely for new repos. Per default, `gocryptfs`.

        • `encryption_timeout`: a string denoting the time after which the
	diary repo gets closed automatically. Per default, `10m`.

        • `spell_langs`: a comma-separated string of spelling locales to be enabled 
	in the diary repo. Per default, `en_us`.

        • `open_in_new_tab`: a boolean, whether to open diary entries in a separate tab 
	if a nonempty buffer is currently open. Per default, `true`.


pensieve.is_configured()          *pensieve.is_configured()*
        Tell if the plugin is configured.
        Return: ~
            true/false

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
